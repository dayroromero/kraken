// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.12.4
// source: pkg/grpc/business_partner.proto

package grpc

import (
	_struct "github.com/golang/protobuf/ptypes/struct"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateBusinessPartnerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status          bool            `protobuf:"varint,1,opt,name=Status,proto3" json:"Status,omitempty"`
	DisableNote     string          `protobuf:"bytes,2,opt,name=DisableNote,proto3" json:"DisableNote,omitempty"`
	CustomerName    string          `protobuf:"bytes,3,opt,name=CustomerName,proto3" json:"CustomerName,omitempty"`
	Contact         []byte          `protobuf:"bytes,4,opt,name=Contact,proto3" json:"Contact,omitempty"`
	Address         []byte          `protobuf:"bytes,5,opt,name=Address,proto3" json:"Address,omitempty"`
	IsSupplier      bool            `protobuf:"varint,6,opt,name=IsSupplier,proto3" json:"IsSupplier,omitempty"`
	IsCustomer      bool            `protobuf:"varint,7,opt,name=IsCustomer,proto3" json:"IsCustomer,omitempty"`
	IsShippingAgent bool            `protobuf:"varint,8,opt,name=IsShippingAgent,proto3" json:"IsShippingAgent,omitempty"`
	IsTrucker       bool            `protobuf:"varint,9,opt,name=IsTrucker,proto3" json:"IsTrucker,omitempty"`
	TaxId           *_struct.Struct `protobuf:"bytes,10,opt,name=TaxId,proto3" json:"TaxId,omitempty"`
	IsChild         bool            `protobuf:"varint,11,opt,name=IsChild,proto3" json:"IsChild,omitempty"`
	ParentCustomer  string          `protobuf:"bytes,12,opt,name=ParentCustomer,proto3" json:"ParentCustomer,omitempty"`
}

func (x *CreateBusinessPartnerRequest) Reset() {
	*x = CreateBusinessPartnerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_business_partner_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBusinessPartnerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBusinessPartnerRequest) ProtoMessage() {}

func (x *CreateBusinessPartnerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_business_partner_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBusinessPartnerRequest.ProtoReflect.Descriptor instead.
func (*CreateBusinessPartnerRequest) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_business_partner_proto_rawDescGZIP(), []int{0}
}

func (x *CreateBusinessPartnerRequest) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *CreateBusinessPartnerRequest) GetDisableNote() string {
	if x != nil {
		return x.DisableNote
	}
	return ""
}

func (x *CreateBusinessPartnerRequest) GetCustomerName() string {
	if x != nil {
		return x.CustomerName
	}
	return ""
}

func (x *CreateBusinessPartnerRequest) GetContact() []byte {
	if x != nil {
		return x.Contact
	}
	return nil
}

func (x *CreateBusinessPartnerRequest) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *CreateBusinessPartnerRequest) GetIsSupplier() bool {
	if x != nil {
		return x.IsSupplier
	}
	return false
}

func (x *CreateBusinessPartnerRequest) GetIsCustomer() bool {
	if x != nil {
		return x.IsCustomer
	}
	return false
}

func (x *CreateBusinessPartnerRequest) GetIsShippingAgent() bool {
	if x != nil {
		return x.IsShippingAgent
	}
	return false
}

func (x *CreateBusinessPartnerRequest) GetIsTrucker() bool {
	if x != nil {
		return x.IsTrucker
	}
	return false
}

func (x *CreateBusinessPartnerRequest) GetTaxId() *_struct.Struct {
	if x != nil {
		return x.TaxId
	}
	return nil
}

func (x *CreateBusinessPartnerRequest) GetIsChild() bool {
	if x != nil {
		return x.IsChild
	}
	return false
}

func (x *CreateBusinessPartnerRequest) GetParentCustomer() string {
	if x != nil {
		return x.ParentCustomer
	}
	return ""
}

type CreateBusinessPartnerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int64  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error  string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CreateBusinessPartnerResponse) Reset() {
	*x = CreateBusinessPartnerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_business_partner_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBusinessPartnerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBusinessPartnerResponse) ProtoMessage() {}

func (x *CreateBusinessPartnerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_business_partner_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBusinessPartnerResponse.ProtoReflect.Descriptor instead.
func (*CreateBusinessPartnerResponse) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_business_partner_proto_rawDescGZIP(), []int{1}
}

func (x *CreateBusinessPartnerResponse) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *CreateBusinessPartnerResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type UpdateBusinessPartnerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BusinessPartnerId string          `protobuf:"bytes,1,opt,name=BusinessPartnerId,proto3" json:"BusinessPartnerId,omitempty"`
	Status            bool            `protobuf:"varint,2,opt,name=Status,proto3" json:"Status,omitempty"`
	DisableNote       string          `protobuf:"bytes,3,opt,name=DisableNote,proto3" json:"DisableNote,omitempty"`
	CustomerName      string          `protobuf:"bytes,4,opt,name=CustomerName,proto3" json:"CustomerName,omitempty"`
	Contact           *_struct.Struct `protobuf:"bytes,5,opt,name=Contact,proto3" json:"Contact,omitempty"`
	Address           *_struct.Struct `protobuf:"bytes,6,opt,name=Address,proto3" json:"Address,omitempty"`
	IsSupplier        bool            `protobuf:"varint,7,opt,name=IsSupplier,proto3" json:"IsSupplier,omitempty"`
	IsCustomer        bool            `protobuf:"varint,8,opt,name=IsCustomer,proto3" json:"IsCustomer,omitempty"`
	IsShippingAgent   bool            `protobuf:"varint,9,opt,name=IsShippingAgent,proto3" json:"IsShippingAgent,omitempty"`
	IsTrucker         bool            `protobuf:"varint,10,opt,name=IsTrucker,proto3" json:"IsTrucker,omitempty"`
	TaxId             *_struct.Struct `protobuf:"bytes,11,opt,name=TaxId,proto3" json:"TaxId,omitempty"`
	IsChild           bool            `protobuf:"varint,12,opt,name=IsChild,proto3" json:"IsChild,omitempty"`
	ParentCustomer    string          `protobuf:"bytes,13,opt,name=ParentCustomer,proto3" json:"ParentCustomer,omitempty"`
}

func (x *UpdateBusinessPartnerRequest) Reset() {
	*x = UpdateBusinessPartnerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_business_partner_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateBusinessPartnerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBusinessPartnerRequest) ProtoMessage() {}

func (x *UpdateBusinessPartnerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_business_partner_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBusinessPartnerRequest.ProtoReflect.Descriptor instead.
func (*UpdateBusinessPartnerRequest) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_business_partner_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateBusinessPartnerRequest) GetBusinessPartnerId() string {
	if x != nil {
		return x.BusinessPartnerId
	}
	return ""
}

func (x *UpdateBusinessPartnerRequest) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *UpdateBusinessPartnerRequest) GetDisableNote() string {
	if x != nil {
		return x.DisableNote
	}
	return ""
}

func (x *UpdateBusinessPartnerRequest) GetCustomerName() string {
	if x != nil {
		return x.CustomerName
	}
	return ""
}

func (x *UpdateBusinessPartnerRequest) GetContact() *_struct.Struct {
	if x != nil {
		return x.Contact
	}
	return nil
}

func (x *UpdateBusinessPartnerRequest) GetAddress() *_struct.Struct {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *UpdateBusinessPartnerRequest) GetIsSupplier() bool {
	if x != nil {
		return x.IsSupplier
	}
	return false
}

func (x *UpdateBusinessPartnerRequest) GetIsCustomer() bool {
	if x != nil {
		return x.IsCustomer
	}
	return false
}

func (x *UpdateBusinessPartnerRequest) GetIsShippingAgent() bool {
	if x != nil {
		return x.IsShippingAgent
	}
	return false
}

func (x *UpdateBusinessPartnerRequest) GetIsTrucker() bool {
	if x != nil {
		return x.IsTrucker
	}
	return false
}

func (x *UpdateBusinessPartnerRequest) GetTaxId() *_struct.Struct {
	if x != nil {
		return x.TaxId
	}
	return nil
}

func (x *UpdateBusinessPartnerRequest) GetIsChild() bool {
	if x != nil {
		return x.IsChild
	}
	return false
}

func (x *UpdateBusinessPartnerRequest) GetParentCustomer() string {
	if x != nil {
		return x.ParentCustomer
	}
	return ""
}

var File_pkg_grpc_business_partner_proto protoreflect.FileDescriptor

var file_pkg_grpc_business_partner_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x70, 0x6b, 0x67, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x62, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa9, 0x03, 0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x20, 0x0a, 0x0b, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x6f, 0x74,
	0x65, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x73, 0x53,
	0x75, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x49,
	0x73, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x73, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x49,
	0x73, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x0f, 0x49, 0x73, 0x53,
	0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0f, 0x49, 0x73, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x73, 0x54, 0x72, 0x75, 0x63, 0x6b, 0x65, 0x72,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x49, 0x73, 0x54, 0x72, 0x75, 0x63, 0x6b, 0x65,
	0x72, 0x12, 0x2d, 0x0a, 0x05, 0x54, 0x61, 0x78, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x05, 0x54, 0x61, 0x78, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x49, 0x73, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x49, 0x73, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x50, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x22, 0x4d, 0x0a, 0x1d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x22, 0x89, 0x04, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2c, 0x0a, 0x11, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x50, 0x61,
	0x72, 0x74, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x42,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x69, 0x73, 0x61,
	0x62, 0x6c, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44,
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x31,
	0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x12, 0x31, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x07, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x73, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x69,
	0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x49, 0x73, 0x53, 0x75, 0x70, 0x70,
	0x6c, 0x69, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x73, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x49, 0x73, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x0f, 0x49, 0x73, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x49,
	0x73, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x49, 0x73, 0x54, 0x72, 0x75, 0x63, 0x6b, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x09, 0x49, 0x73, 0x54, 0x72, 0x75, 0x63, 0x6b, 0x65, 0x72, 0x12, 0x2d, 0x0a, 0x05,
	0x54, 0x61, 0x78, 0x49, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x52, 0x05, 0x54, 0x61, 0x78, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x49,
	0x73, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x49, 0x73,
	0x43, 0x68, 0x69, 0x6c, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x50,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x32, 0xe4, 0x01,
	0x0a, 0x16, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65,
	0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x64, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65,
	0x72, 0x12, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x50, 0x61, 0x72,
	0x74, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x64,
	0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x12, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x50, 0x61,
	0x72, 0x74, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x67, 0x72,
	0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkg_grpc_business_partner_proto_rawDescOnce sync.Once
	file_pkg_grpc_business_partner_proto_rawDescData = file_pkg_grpc_business_partner_proto_rawDesc
)

func file_pkg_grpc_business_partner_proto_rawDescGZIP() []byte {
	file_pkg_grpc_business_partner_proto_rawDescOnce.Do(func() {
		file_pkg_grpc_business_partner_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_grpc_business_partner_proto_rawDescData)
	})
	return file_pkg_grpc_business_partner_proto_rawDescData
}

var file_pkg_grpc_business_partner_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_pkg_grpc_business_partner_proto_goTypes = []interface{}{
	(*CreateBusinessPartnerRequest)(nil),  // 0: proto.CreateBusinessPartnerRequest
	(*CreateBusinessPartnerResponse)(nil), // 1: proto.CreateBusinessPartnerResponse
	(*UpdateBusinessPartnerRequest)(nil),  // 2: proto.UpdateBusinessPartnerRequest
	(*_struct.Struct)(nil),                // 3: google.protobuf.Struct
}
var file_pkg_grpc_business_partner_proto_depIdxs = []int32{
	3, // 0: proto.CreateBusinessPartnerRequest.TaxId:type_name -> google.protobuf.Struct
	3, // 1: proto.UpdateBusinessPartnerRequest.Contact:type_name -> google.protobuf.Struct
	3, // 2: proto.UpdateBusinessPartnerRequest.Address:type_name -> google.protobuf.Struct
	3, // 3: proto.UpdateBusinessPartnerRequest.TaxId:type_name -> google.protobuf.Struct
	0, // 4: proto.BusinessPartnerService.CreateBusinessPartner:input_type -> proto.CreateBusinessPartnerRequest
	2, // 5: proto.BusinessPartnerService.UpdateBusinessPartner:input_type -> proto.UpdateBusinessPartnerRequest
	1, // 6: proto.BusinessPartnerService.CreateBusinessPartner:output_type -> proto.CreateBusinessPartnerResponse
	1, // 7: proto.BusinessPartnerService.UpdateBusinessPartner:output_type -> proto.CreateBusinessPartnerResponse
	6, // [6:8] is the sub-list for method output_type
	4, // [4:6] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_pkg_grpc_business_partner_proto_init() }
func file_pkg_grpc_business_partner_proto_init() {
	if File_pkg_grpc_business_partner_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_grpc_business_partner_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBusinessPartnerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_business_partner_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBusinessPartnerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_business_partner_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateBusinessPartnerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_grpc_business_partner_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_grpc_business_partner_proto_goTypes,
		DependencyIndexes: file_pkg_grpc_business_partner_proto_depIdxs,
		MessageInfos:      file_pkg_grpc_business_partner_proto_msgTypes,
	}.Build()
	File_pkg_grpc_business_partner_proto = out.File
	file_pkg_grpc_business_partner_proto_rawDesc = nil
	file_pkg_grpc_business_partner_proto_goTypes = nil
	file_pkg_grpc_business_partner_proto_depIdxs = nil
}
